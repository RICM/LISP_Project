/**
 * JavaCC template file created by SF JavaCC plugin 1.5.28+ wizard for JavaCC 1.5.0+
 */options {  DEBUG_PARSER=false;
  STATIC=false;}PARSER_BEGIN(Reader)
package reader;

< Import section >


public class Reader {

	/** le support de lecture */
	protected static java.io.Reader in = new BufferedReader(new InputStreamReader (System.in));
	
	/** lecture d'une S-EXPR au terminal
	 *  @return Sexpr : la Sexpr construite.
	 *  @throws LispException une erreur de syntaxe
	 */
	public static _Sexpr read() throws LispException{
		_Sexpr toReturn = new Nil(); //TO BE MODIFIED
		return (toReturn); // TO BE MODIFIED
	}
	
	/** lecture d'une S-EXPRs à partir de la chaine
	 * @param s : le nom du fichier
	 * @return Sexpr : la Sexpr construite
	 * @throws LispException une erreur de syntaxe
	 */
	public static _Sexpr read(String s) throws LispException{
		_Sexpr toReturn = new Nil(); //TO BE MODIFIED
		return (toReturn); // TO BE MODIFIED
	}
	
	/** évaluation de la séquence S-EXPRs à partir du fichier s
	 *  @param s : le nom du fichier
	 *  @return Sexpr : synbole du nom du fichier
	 *  @throws LispException une erreur de lecture
	 */
	public static _Sexpr importe(String s) throws LispException{
		_Sexpr toReturn = new Nil(); //TO BE MODIFIED
		return (toReturn); // TO BE MODIFIED
	}
	
}
PARSER_END(Reader)
// ignored charactersSKIP :{  " " | "\r" | "\t" | "\n"
|  "\u0000" | "\u0001" | "\u0002" | "\u0003" | "\u0004" | "\u0005" | "\u0006" | "\u0007"
|  "\u0008" | "\u000B" | "\u000C" | "\u000E" | "\u000F" | "\u0010" | "\u0011" | "\u0012"
|  "\u0013" | "\u0014" | "\u0015" | "\u0016" | "\u0017" | "\u0018" | "\u0019" | "\u001A"
|  "\u001B" | "\u001C" | "\u001D" | "\u001E" | "\u001F" | "\u007F"}
MORE :
{ "//" : IN_SL_COMMENT
 "/*" : IN_ML_COMMENT
}
<IN_SL_COMMENT> SPECIAL_TOKEN :{<SL_COMMENT: "\n" | "\r" | "\r\n"> : DEFAULT}<IN_ML_COMMENT> SPECIAL_TOKEN :{<ML_COMMENT: "*/" > : DEFAULT}
<IN_SL_COMMENT,IN_ML_COMMENT> SKIP :{< ~[] >}// les lexemes du langage
TOKEN : {//Definir les lexemes du langage}

// TO DO
}
